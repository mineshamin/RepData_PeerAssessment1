plot(time, Daily.Pattern)
df <- data.frame(time, Daily.Pattern)
df
library(ggplot2)
g<- ggplot(df, aes(time, Daily.Pattern))
g
summary(g)
p <- g+ geom_point()
print(p)
p <- g+ geomlines()
p <- g+ geom_lines()
print(p)
p <- g+ geom_line()
print(p)
help(scale_x_datetime)
p <- g+ geom_line() + scale_x_datetime(breaks = date_breaks("2 hours")
print(p)
df
time
times
df <- data.frame(times, Daily.Pattern)
p <- g+ geom_line() + scale_x_datetime(breaks = date_breaks("2 hours")
p <- g+ geom_line() + scale_x_datetime(breaks = date_breaks("2
p <- g+ geom_line() + scale_x_datetime(breaks = date_breaks("2 hours"))
print(p)
str(time)
str(times)
time<-format( seq.POSIXt(as.POSIXct(Sys.Date()), as.POSIXct(Sys.Date()+1), by = "5 min"),
"%H:%M", tz="GMT")
str(time)
time<- as.POSIXct(time)
p <- g+ geom_line() + scale_x_datetime(labels=date_format("breaks = date_breaks("2 hours"))
p <- g+ geom_line()
g<- ggplot(df, aes(time, Daily.Pattern))
p <- g+ geom_line()
print(p)
g<- ggplot(df, aes(time(1:288), Daily.Pattern))
p <- g+ geom_line()
print(p)
time
df
df <- data.frame(times, Daily.Pattern)
head(df)
df <- data.frame(time, Daily.Pattern)
df <- data.frame(time(1:288), Daily.Pattern)
head(df)
p <- g+ geom_line()
)
start <- ISOdate(2001, 1, 1, tz = "")
df <- data.frame(
day30  = start + round(runif(100, max = 30 * 86400)),
day7  = start + round(runif(100, max = 7 * 86400)),
day   = start + round(runif(100, max = 86400)),
hour10 = start + round(runif(100, max = 10 * 3600)),
hour5 = start + round(runif(100, max = 5 * 3600)),
hour  = start + round(runif(100, max = 3600)),
min10 = start + round(runif(100, max = 10 * 60)),
min5  = start + round(runif(100, max = 5 * 60)),
min   = start + round(runif(100, max = 60)),
sec10 = start + round(runif(100, max = 10)),
y = runif(100)
)
str(df)
start <- ISOdate(2001, 1, 1, tz = "")
start
help(ISOdatetime)
5minInt <- seq(ISOtime(2001,1, 1, 0, 0, 0), ISOdatetime(2001,1,1,23,55,0))
5minInt <- seq(ISOtime(2001,1, 1, 0, 0, 0), ISOdatetime(2001,1,1,23,55,0), by(60*5))
fiveMinInt <- seq(ISOtime(2001,1, 1, 0, 0, 0), ISOdatetime(2001,1,1,23,55,0), by(60*5))
fiveMinInt <- seq(ISOdatetime(2001,1, 1, 0, 0, 0), ISOdatetime(2001,1,1,23,55,0), by(60*5))
seq(ISOdatetime(2001,2,3,0,0,0), ISOdatetime(2001,2,4,0,0,0), by=(60*5))
a<-seq(ISOdatetime(2001,2,3,0,0,0), ISOdatetime(2001,2,4,0,0,0), by=(60*5))
a<-seq(ISOdatetime(2001,2,3,0,0,0), ISOdatetime(2001,2,3,23,55,0), by=(60*5))
a
fiveMinInt <- seq(ISOdatetime(2001,1, 1, 0, 0, 0), ISOdatetime(2001,1,1,23,55,0), by=(60*5))
s <- split(Activity.data, Activity.data$interval)
Daily.Pattern <- lapply(s, function(x) mean(x$steps), na.rm = TRUE))
s <- split(Activity.data, Activity.data$interval)
Daily.Pattern <- lapply(s, function(x) mean(x$steps, na.rm = TRUE))
df <- data.frame(fiveMinInt, Daily.Pattern)
df <- data.frame(fiveMinInt, Daily.Pattern)
g<- ggplot(df, aes(fiveMinInt, Daily.Pattern))
p<- g + geom_line()
print(p)
df <- data.frame(time, Daily.Pattern)
df
fiveMinIt
fiveMinInt
str(fiveMinInt)
df <- data.frame(time, Daily.Pattern)
df
time
as.numeric(Daily.Pattern)
df <- data.frame(time, as.Numeric(Daily.Pattern))
df <- data.frame(time, as.numeric(Daily.Pattern))
str(time)
str(Daily.Pattern)
help(max)
max(Daily.Pattern)
apply(Daily.Pattern, max)
help(apply)
apply(Daily.Pattern, 1,max)
apply(Daily.Pattern, 2,max)
lapply(Daily.Pattern,max)
max(unlist(Daily.Pattern))
str(DF)
st(df)
str(df)
unfactor
unfactor()
droplevels()
unlist(Daily.Pattern)
df
df <- data.frame(fiveMinInt, unlist(Daily.Pattern))
df
df[2]
max(df[2])
which.max(df[2])
max(df[2])
?which.max
str(df)
which.max(as.numeric(df[2])
which.max(df[2])
as.numeric(df[2])
g1 = subset(df, Daily.Pattern>206)
g1
g1
g1 = subset(df, Daily.Pattern==max(Daily.Pattern))
g1 = subset(df, Daily.Pattern==max(unlist(Daily.Pattern))
g1
g1<- subset(df, Daily.Pattern==max(unlist(Daily.Pattern))
)
g1
g1<- subset(df, Daily.Pattern==max(unlist(Daily.Pattern)))
g1
g1<- subset(df, Daily.Pattern==max(Daily.Pattern))
s <- split(Activity.data, Activity.data$interval)
Daily.Pattern <- sapply(s, function(x) mean(x$steps, na.rm = TRUE))
df <- data.frame(fiveMinInt, unlist(Daily.Pattern))
g<- ggplot(df, aes(fiveMinInt, Daily.Pattern))
g1<- subset(df, Daily.Pattern==max(unlist(Daily.Pattern)))
p<- g + geom_line() + scale_x_datetime(labels = date_format("%H:%M"), breaks = date_breaks("2 hour")) + labs(title = "Activity Monitoring Data") + labs(x = "Time (5 Minute Intervals)") + labs(y = "Average Steps Taken") + geom_point(data=g1, col="red")
print(p)
g1
str(g1)
str(g1[2])
g1[2]
g1[1]
g
str(g)
df
str(df)
library(ggplot2)
highlight.gene <- "G1"
set.seed(23456)
a <- data.frame(GeneName = paste("G", 1:10, sep = ""),
Index1 = runif(10, 100, 200),
Index2 = runif(10, 100, 150))
g1 <- subset(a, GeneName == "G1")
# plot the data
ggplot(a, aes(log10(Index1+1), Index2)) + geom_point(alpha=1/5) +  # this is the base plot
geom_point(data=g1, colour="red") +  # this adds a red point
geom_text(data=g1, label="G1", vjust=1) # this adds a label for the red point
a
head(df)
g1
df
g1
s <- split(Activity.data, Activity.data$interval)
Daily.Pattern <- sapply(s, function(x) mean(x$steps, na.rm = TRUE))
df <- data.frame(fiveMinInt, unlist(Daily.Pattern))
g1<- subset(df, Daily.Pattern==max(unlist(Daily.Pattern)))
df
g1
head(df)
df(835)
df(835)
df[835]
df[835,]
df
highlight.gene <- "G1"
set.seed(23456)
a <- data.frame(GeneName = paste("G", 1:10, sep = ""),
Index1 = runif(10, 100, 200),
Index2 = runif(10, 100, 150))
# create the subset
g1 <- subset(a, GeneName == "G1")
# plot the data
ggplot(a, aes(log10(Index1+1), Index2)) + geom_point(alpha=1/5) +  # this is the base plot
geom_point(data=g1, colour="red") +  # this adds a red point
geom_text(data=g1, label="G1", vjust=1) # this adds a label for the red point
g
a
g
g1
# create the subset
g1 <- subset(a, GeneName == "G7")
# plot the data
ggplot(a, aes(log10(Index1+1), Index2)) + geom_point(alpha=1/5) +  # this is the base plot
geom_point(data=g1, colour="red") +  # this adds a red point
geom_text(data=g1, label="G1", vjust=1) # this adds a label for the red point
help(aes)
help(aes)
aes(fiveMinInt, Daily.Pattern)
plot(fiveMinInt, Daily.Pattern)
plot(fiveMinInt, Daily.Pattern, type="l")
plot(fiveMinInt, Daily.Pattern, type="l", ylab = "Daily Average Steps", xlab="Time (5 Minute Intervals)", main  = "Activity Monitoring Data")
help(points)
max(df)
which.max(as.numeric(df[2])
)
max(as.numeric(df[2])
)
max(df[2])
g1<- subset(df, Daily.Pattern==max(unlist(Daily.Pattern)))
g1
g1[1]
g1[1],2
points(g1[1],g1[2])
plot(fiveMinInt, Daily.Pattern, type="l", ylab = "Daily Average Steps", xlab="Time (5 Minute Intervals)", main  = "Activity Monitoring Data")
points(max.steps[1], max.steps[2], col="red")
max.steps<- subset(df, Daily.Pattern==max(unlist(Daily.Pattern)))
plot(fiveMinInt, Daily.Pattern, type="l", ylab = "Daily Average Steps", xlab="Time (5 Minute Intervals)", main  = "Activity Monitoring Data")
points(max.steps[1], max.steps[2], col="red")
help(points)
points(max.steps[1], max.steps[2], pch = 21, col="red")
points(max.steps[1], max.steps[2], pch = "21"", col="red")
points(max.steps[1], max.steps[2], pch = "21", col="red")
points(max.steps[1], max.steps[2], col = 'red',type = 'p',pch = 16)
plot(fiveMinInt, Daily.Pattern, type="l", ylab = "Daily Average Steps", xlab="Time (5 Minute Intervals)", main  = "Activity Monitoring Data")
points(max.steps[1], max.steps[2], col = 'red',type = 'p',pch = 16)
plot(fiveMinInt, Daily.Pattern, type="l", ylab = "Daily Average Steps", xlab="Time (5 Minute Intervals)", main  = "Activity Monitoring Data")
axis(side=1, at=c(0:23))
points(max.steps[1], max.steps[2], col = 'red',type = 'p',pch = 16)
axis(side=1, at=c(0:23))
help(format)
str(df)
format(max.steps[1], "%H:%M")
format(max.steps[[1]], "%H:%M")
sum(is.na(Activity.Data$steps))
sum(is.na(Activity.data$steps))
sum(is.na(Activity.data$steps))
head(Daily.Pattern)
str(Daily.Pattern)
head(s)
set.seed(42)
d1 <- as.data.frame(matrix(sample(c(NA,0:5), 5*10, replace=TRUE), ncol=10))
cM <- colMeans(d1, na.rm=TRUE)
indx <- which(is.na(d1), arr.ind=TRUE)
d1[indx] <- cM[indx[,2]]
d1
set.seed(42)
d1 <- as.data.frame(matrix(sample(c(NA,0:5), 5*10, replace=TRUE), ncol=10))
d1
cM
indx
help(which)
head(Activity.data)
str(Activity.data)
Activity.data$interval
helop(sapply)
help(sapply)
help(tapply)
Imputed <- tapply(Activity.date$steps, Activity.data$date, function(x) x[which(is.na(x), arr.ind=TRUE)]<-mean(x, na.rm=TRUE))
Imputed <- tapply(Activity.data$steps, Activity.data$date, function(x) x[which(is.na(x), arr.ind=TRUE)]<-mean(x, na.rm=TRUE))
imputed
Imputed
cM
cm[indx[,2]]
cM[indx[,2]]
d1[index]
d1[indx]
Imputed <- tapply(Activity.data$steps, Activity.data$date, function(x) mean(x, na.rm=TRUE))
Imputed
help(dplyr)
library(dplyr)
install.package("dplyr")
install.packages("dplyr")
library(dplyr)
library(dplyr)
help(dplyr)
help(nafill)
help(is.na)
help(mutate)
library(dataset)
library(datasets)
data(airquality)
head(airquality)
mutate(airquality, Ozone = -Ozone)
mutate(airquality, new = -Ozone, Temp = (Temp - 32) / 1.8)
head(mutate(airquality, new = -Ozone, Temp = (Temp - 32) / 1.8))
head(airquality)
head(mutate(airquality, Temp = (Temp - 32) / 1.8, OzT = Ozone / Temp))
:group_by(iris, Species)
group_by(iris, Species)
Imputed.Activity.Data<-Activity.data
iris %>% group_by(Species) %>% summarise(â€¦)
library(datasets)
iris %>% group_by(Species) %>% summarise(â€¦)
group_by(iris, Species)
library(dplyr)
group_by(iris, Species)
summarise(iris, avg = mean(Sepal.Length))
iris %>% group_by(Species) %>% summarise(iris, avg = mean(Sepal.Length))
iris %>% group_by(Species) %>% summarise(iris, avg = mean(Sepal.Length))
iris
ungroup(iris)
head(iris)
group_by(iris, Species)
summarise(iris, avg = mean(Sepal.Length))
Imputed.activity.data %>% group_by(interval) %>% mutate(avg = summarise(mean(steps))
Activity.data <- read.csv("activity.csv")
Activity.data[3] <- factor(Activity.data[,3])
fiveMinInt <- seq(ISOdatetime(2001,1, 1, 0, 0, 0), ISOdatetime(2001,1,1,23,55,0), by=(60*5))
Total.Steps<-tapply(Activity.data$steps, Activity.data$date, sum, na.rm=TRUE)
Activity.data <- read.csv("activity.csv")
Activity.data[3] <- factor(Activity.data[,3])
fiveMinInt <- seq(ISOdatetime(2001,1, 1, 0, 0, 0), ISOdatetime(2001,1,1,23,55,0), by=(60*5))
Total.Steps<-tapply(Activity.data$steps, Activity.data$date, sum, na.rm=TRUE)
hist(Total.Steps, breaks=20, col="red",  xlab = "Total Number of Steps Taken Each Day", main ="Total Steps per Day")
mean(Total.Steps)
median(Total.Steps)
s <- split(Activity.data, Activity.data$interval)
Daily.Pattern <- sapply(s, function(x) mean(x$steps, na.rm = TRUE))
df <- data.frame(fiveMinInt, Daily.Pattern)
max.steps<- subset(df, Daily.Pattern==max(Daily.Pattern))
plot(fiveMinInt, Daily.Pattern, type="l", ylab = "Daily Average Steps", xlab="Time (5 Minute Intervals)", main  = "Activity Monitoring Data")
points(max.steps[1], max.steps[2], col = 'red',type = 'p',pch = 16)
Imputed.activity.data<-Activity.data
library(dplyr)
Imputed.activity.data %>% group_by(interval) %>% mutate(avg = summarise(mean(steps))
)
Interval <- group_by(Imputed.activity.data, interval)
head(interval)
head(Interval)
head(Imputed.activity.data)
summarize(Interval, avg = mean(steps))
temp<-summarize(Interval, avg = mean(steps))
temp
temp[222,2]
temp
temp<-summarize(Interval, avg = mean(steps, rm.na=TRUE))
temp
temp<-summarize(Interval, avg = mean(steps, na.rm=TRUE))
temp
library(dplyr)
Interval.Data <- group_by(Imputed.activity.data, interval)
Interval.Avg <-summarize(Interval.Data, avg = mean(steps))
mutate(Imputed.activity.data, avg = Interval.Avg)
str(Interval.avg)
str(Interval.Avg)
Interval.Data <- group_by(Imputed.activity.data, interval)
Interval.Avg <-summarize(Interval.Data, avg = mean(steps, na.rm=TRUE))
temp<-summarize(Interval, avg = mean(steps, na.rm=TRUE))temp
temp
Interval.Data <- group_by(Imputed.activity.data, interval)
Interval.Avg <-summarize(Interval.Data, avg = mean(steps, na.rm=TRUE))
Interval.Avg
Interval.Avg[288]
Interval.Avg[281]
str{Interval.Avg}
str(Interval.Avg)
View(Interval.Avg)
Interval
Imputed.activity.data[is.na(Imputed.activity.data$steps),]<-mutate( Imputed.activity.data[is.na(Imputed.activity.data$steps),], steps=Interval.Avg)
which(is.na(Imputed.Interval.Avg))
which(is.na(Imputed.Activity.Avg))
which(is.na(Imputed.activity.data))
mutate_each(iris, funs(min_rank))
head{iris}
head(iris)
funs
help(funs)
View(Interval.Data)
Interval.Data
View(Interval.Avg)
mutate(Interval.Data, avg= Interval.Avg)
Interval.Avg
mutate(Interval.Data, avg= Interval.Avg[,2])
View(Interval.Data)
Interval.Data
mutate(Interval.Data, avg= Interval.Avg[,2])
mutate(Interval.Data, avg= Interval.Avg[2])
Interval.Data
Interval.Avg
Interval.Avg[2]
Interval.Avg[2]->AVG
AVg
AVG
Interval.Avg[2]->data.frame(AVG)
AVG
c(AVG, df)
c(Imputed.activity.data, AVG)
c(Imputed.activity.data, AVG)<-TEST
c(Imputed.activity.data, AVG)->TEST
str(TEST)
head(TEST)
Imputed.activity.data[2]
Imputed.activity.data[3]
Imputed.activity.data[1]
tapply(Imputed.activity.data, Imputed.activity.data$Interval,function(x) head(x))
tapply(Imputed.activity.data, Imputed.activity.data$Interval,function(x) head(x))
help(tapply)
tapply(Imputed.activity.data$steps, Imputed.activity.data$Interval,function(x) head(x))
tapply(Imputed.activity.data$steps, Imputed.activity.data$Interval,function(x) head(x))
help(cbind)
m <- cbind(1, 1:7)
m
View(Imputed.activity.data)
View(Interval.Avg)
cbind(Imputed.activiy.data, Internal.Avg[2])
cbind(Imputed.activity.data, Internal.Avg[2])
cbind(Imputed.activity.data, Interval.Avg[2])
cbind(Imputed.activity.data, Interval.Avg[2])
Imputed.activity.data<-cbind(Imputed.activity.data, Interval.Avg[2])
View(Imputed.activity.data)
Imputed.activity.data[is.na(Imputed.activity.data$steps),]<-mutate( Imputed.activity.data[is.na(Imputed.activity.data$steps),], steps=avg)
View(Imputed.activity.data)
View(Imputed.activity.data)
View(Activity.data)
Total.Steps
Imputed.Total.Steps
Int.Data <- group_by(Activity.data, interval)
Int.Avg <-summarize(Int.Data, avg = mean(steps, na.rm=TRUE))
Imputed.data<-cbind(Activity.data, Int.Avg[2])
Imputed.data[is.na(Imputed.data$steps),]<-mutate( Imputed.data[is.na(Imputed.data$steps),], steps=avg)
Imputed.Total.Steps<-tapply(Imputed.data$steps, Imputed.data$date, sum, na.rm=FALSE)
hist(Imputed.Total.Steps, breaks=20, col="red",  xlab = "Total Number of Steps Taken Each Day (Imputed Values)", main ="Total Steps per Day")
mean(Imputed.Total.Steps)
median(Imputed.Total.Steps)
help(weekdays)
weekdays(Activity.data[2])
weekdays(as.Date(Activity.data[2]))
weekdays(.leap.seconds)
.leap.second
.leap.seconds
View(Activity.data)
z<-strptime(Activity.Data[2], "%Y-%m/%d")
z<-strptime(Activity.data[2], "%Y-%m/%d")
z<-strptime(Activity.data[2], "%Y-%m-%d")
z<-strptime(Activity.data$date, "%Y-%m-%d")
z
weekdays(z)
Activity.data$date<-strptime(Activity.data$date, "%Y-%m-%d")
Total.Steps<-tapply(Activity.data$steps, Activity.data$date, sum, na.rm=TRUE)
Activity.data$date <- factor(Activity.data$date)
Activity.data[3] <- factor(Activity.data[,3])
POSIX.Date <- strptime(Activity.data$date, "%Y-%m-%d")
POSIX.Date <- strptime(Activity.data$date, "%Y-%m-%d")
Weekday <- weekdays(POSIX.Date)
Month <- airquality$Month
table(addNA(Month))
table(addNA(Month, ifany = TRUE))
help(transform)
Weekday$wend <- as.factor(ifelse(weekday( myframe$dates) %in% c("Saturday","Sunday"), "Weekend", "Weekday"))
head(Weekday)
Weekday$wend <- as.factor(ifelse(Weekday %in% c("Saturday","Sunday"), "Weekend", "Weekday"))
head(weekday)
head(Weekday)
mutate(Weekday, as.factor(ifelse(Weekday %in% c("Saturday","Sunday"), "Weekend", "Weekday")))
help(ifelse)
as.factor(ifelse(Weekday %in% c("Saturday","Sunday"), "Weekend", "Weekday"))
as.factor(ifelse(Weekday %in% c("Saturday","Sunday"), "Weekend", "Weekday"))
Weekday <-as.factor(ifelse( weekdays(POSIX.Date) %in% c("Saturday","Sunday"), "Weekend", "Weekday"))
head(Weekday)
Activity.data$interval
Weekday <- cbind(Weekday, Activity.data$steps)
head(weekday)
head(Weekday)
head(Weekday)
Weekday
Weekday <-as.factor(ifelse( weekdays(POSIX.Date) %in% c("Saturday","Sunday"), "Weekend", "Weekday"))
head(Weeday)
head(Weekday)
c[Weekday, Activity.data$steps]
c[Weekday, Activity.data]
c(Weekday, Activity.data)
head(c(Weekday, Activity.data))
temp<-c(Weekday, Activity.data)
str(Activity.data)
str(Weeday)
str(Weekday)
temp<-data.frame(Weekday, Activity.data$steps)
str(temp)
Daily.Pattern <- sapply(s, function(x) mean(x$steps, na.rm = TRUE))
w <- split(temp, Activity.data$Weekday)
w <- split(temp, temp$Weekday)
weekly.pattern <- sapply(w, function(x) mean(x$steps, na.rm=TRUE))
weekly.pattern <- sapply(w, function(x) mean(x$Activity.data.steps, na.rm=TRUE))
df2 <- data.frame(fiveMinInt, weekly.pattern)
df2
weekly.pattern <- sapply(w, function(x) mean(x$s, na.rm=TRUE))
w <- split(temp, temp$Weekday)
w
Weekend
temp<-data.frame(Activity.data, Weekday)
str(temp)
w <- split(temp, temp$Weekday)
interaction(temp$interval, temp$Weekday)
str(split(temp, list(temp$interval, temp$Weekday)))
str(split(temp, list(temp$interval, temp$Weekday), drop=TRUE))
w<-split(temp, list(temp$interval, temp$Weekday), drop=TRUE)
weekly.pattern <- sapply(w, function(x) mean(x$s, na.rm=TRUE))
weekly.pattern
str(weekly.pattern)
factor(weekly.pattern)
w <- split(temp, temp$Weekday)
weekly.pattern <- tapply(w, w$interval, function(x) mean(x$steps, na.rm = TRUE))
help(aggregate)
aggregate(state.x77, list(Region = state.region), mean)
aggregate(state.x77, list(Region = state.region), mean)->test
str(test)
